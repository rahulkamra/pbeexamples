<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600" applicationComplete="application1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import as3isolib.geom.Pt;
			import as3isolib.graphics.Stroke;
			
			import com.mslabs.pbe.components.InteractionComponent;
			import com.mslabs.pbe.iso.renderers.IIsoCustomRenderer;
			import com.mslabs.pbe.iso.renderers.IsoDefaultViewRenderer;
			import com.mslabs.pbe.iso.renderers.IsoSceneLayoutRenderer;
			import com.pblabs.engine.PBE;
			import com.pblabs.engine.entity.IEntity;
			import com.pblabs.engine.entity.allocateEntity;
			import com.pblabs.rendering2D.BasicSpatialManager2D;
			import com.pblabs.rendering2D.SceneAlignment;
			
			import mx.core.FlexGlobals;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			
			import mycmp.MouseManager;
			import mycmp.MousePanningSceneComponent;
			
			import port.iso.components.MyIsoGridComponent;
			import port.iso.components.MyIsoSpatialComponent;
			import port.iso.components.MyIsoSpriteComponent;
			import port.iso.renderers.IsoSimpleSceneLayoutRenderer;
			import port.iso.scene.IsoDisplayObjectScene;
			import port.iso.scene.MyIsoSceneView;
			
			
			
			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				/* IsoSceneLayoutRenderer;
				IsoSceneView;
				com.mslabs.pbe.iso.renderers.IsoDefaultViewRenderer;
				com.mslabs.pbe.iso.components.IsoSpatialComponent
				com.mslabs.pbe.iso.components.IsoAxis
				com.mslabs.pbe.iso.components.IsoGridComponent
				com.mslabs.pbe.components.InteractionComponent;
				com.mslabs.pbe.components.ResourceLoaderComponent;
				com.mslabs.pbe.iso.components.IIsoComponent;
				com.mslabs.pbe.iso.components.IIsoSpatialObject;
				com.mslabs.pbe.iso.components.IsoBaseComponent;
				com.mslabs.pbe.iso.components.IsoBoxComponent;
				com.mslabs.pbe.iso.components.IsoBoxSprite;
				com.mslabs.pbe.iso.components.IsoGridComponent;
				com.mslabs.pbe.iso.components.IsoSpatialComponent;
				com.mslabs.pbe.iso.components.IsoSpriteComponent;
				com.mslabs.pbe.iso.components.IsoSpriteSheetComponent
				com.mslabs.pbe.iso.renderers.IIsoCustomRenderer
				com.mslabs.pbe.iso.renderers.IsoDefaultViewRenderer;
				com.mslabs.pbe.iso.renderers.IsoSceneLayoutRenderer;
				com.mslabs.pbe.iso.scene.IsoSceneLayer;
				com.mslabs.pbe.iso.scene.IsoSceneView; */
				
				start();
				initializ();
				//addAsset();
			}
			[Embed(source="1.png")]
			public var class1:Class;
			
			[Embed(source="2.png")]
			public var class2:Class;
			
			[Embed(source="3.png")]
			public var class3:Class;
			
			[Embed(source="13_1.swf" ,  symbol="cco")]
			public var worker:Class;
			
			public static var wrapper:UIComponent = new UIComponent;
			
			public var firstisoScene:IsoDisplayObjectScene;
			
			public var basicSpatial:BasicSpatialManager2D;
			private var mousepanning:MousePanningSceneComponent;

			private var defaultView:MyIsoSceneView;

			private var gameEntity:IEntity;

			private var mouseComponent:MouseManager;
			private function start():void
			{
				// TODO Auto Generated method stub
				wrapper.width = FlexGlobals.topLevelApplication.width;
				wrapper.height = FlexGlobals.topLevelApplication.height;
				FlexGlobals.topLevelApplication.addElement(wrapper);
				//starting PBE
				PBE.startup(wrapper);
			}
			
			private function initializ():void
			{
				// TODO Auto Generated method stub
				defaultView = new MyIsoSceneView();
				defaultView.name = "IsoView";
				
				gameEntity = allocateEntity();
				gameEntity.initialize("IsoGame");
				
				basicSpatial = new BasicSpatialManager2D;
				gameEntity.addComponent(basicSpatial,"SpatialManager");
				
				firstisoScene = new IsoDisplayObjectScene();
				firstisoScene.sceneView = defaultView;
				firstisoScene.layoutRenderer = new IsoSimpleSceneLayoutRenderer();
				
				gameEntity.addComponent(firstisoScene,"Scene_0");
				
				var isoGrid:MyIsoGridComponent = new MyIsoGridComponent();
				isoGrid.cellSize = 50;
				isoGrid.gridSize = new Pt(20,20);
				isoGrid.gridStroke = new Stroke(1,0);
				isoGrid.scene = firstisoScene;
				isoGrid.showOrigin = false;
				isoGrid.zIndex = -1;
				gameEntity.addComponent(isoGrid,"IsoGrid");
				
				
				mouseComponent = new MouseManager;
				mouseComponent.scene = firstisoScene;
				gameEntity.addComponent(mouseComponent,"mouseComponent");
			}
			
			private function addAsset():void
			{
				// TODO Auto Generated method stub
				for(var count:int = 0 ; count < 2 ; count++){
					createAsset(count);
				}
				//box.debug
			}
			
			
			private function createAsset(id:int):void{
				var boxEntity:IEntity = allocateEntity();
				boxEntity.initialize("Box"+id);
				
			 	var spatial:MyIsoSpatialComponent = new MyIsoSpatialComponent();
				spatial.position = new Pt(10*id,10*id);
				boxEntity.addComponent(spatial,"Spatial"+id);
				
				var sprite:MyIsoSpriteComponent = new MyIsoSpriteComponent(false);
				sprite.sprite = worker;
				sprite.optimize = false;
				sprite.scene = firstisoScene;
				sprite.spatialComponentName = "Spatial"+id
				boxEntity.addComponent(sprite,"Sprite"+id);
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				addAsset();
			}
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				AddSprites.addSpriteSheet();
			}
			
			protected function button3_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				mousepanning = new MousePanningSceneComponent();
				mousepanning.scene = firstisoScene;
				mousepanning.sceneView = defaultView;
				mousepanning.leftTopOffset = new Point(200,200);
				mousepanning.rightBottomOffset = new Point(200,200);
				gameEntity.addComponent(mousepanning,"MousePanningComponent");
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Button x="37" y="127" label="Add Symbol" click="button1_clickHandler(event)"/>
	<s:Button x="37" y="156" label="Add Sprite Sheet" click="button2_clickHandler(event)"/>
	<s:Button x="37" y="189" label="Test mouse Component" click="button3_clickHandler(event)"/>
</s:Application>
